#------------------------------------------------------------------------- charger le dossier cogs et ses fichiers

je garde cela la au cas ou :

#pour charger le dossier cogs et ses fichiers :

     # Liste des cogs à charger
        cogs = ['cogs.games', 'cogs.moderation', 'cogs.events']
        
        for cog in cogs:
            # On vérifie si le cog est déjà chargé avant de le charger à nouveau
            if cog not in self.extensions:
                try:
                    await self.load_extension(cog)
                    print(f"Extension {cog} chargée avec succès.")
                except Exception as e:
                    print(f"Échec du chargement de {cog}: {str(e)}")
            else:
                print(f"Extension {cog} déjà chargée, rien à faire.")

#------------------------------------------------------------------------- main avant grand changement


     #Le code start.py avant grand changement
          import os
from dotenv import load_dotenv
import discord
from discord.ext import commands
import random
from keep_alive import keep_alive

load_dotenv()
token = os.getenv('TOKEN_BOT_DISCORD')

# Crée un objet bot
intents = discord.Intents.all()
bot = commands.Bot(command_prefix='!', intents=intents)

# correspondance entre le résultat et les emojis de dés
DICE_EMOJIS = {
    1: "🎲1️⃣",
    2: "🎲2️⃣",
    3: "🎲3️⃣",
    4: "🎲4️⃣",
    5: "🎲5️⃣",
    6: "🎲6️⃣"
}

@bot.event
async def on_ready():
    bot.remove_command("roll")  # Supprime les doublons éventuels
    print(f"Connecté en tant que {bot.user}")
@bot.command(name="roll")
async def roll(ctx):
    # Lancer un dé (1 à 6)
    dice_result = random.randint(1, 6)
    # Récupérer l'emoji correspondant
    dice_emoji = DICE_EMOJIS[dice_result]
    # Envoyer le résultat sous forme d'emoji
    await ctx.send(f"🎲 Tu as obtenu : {dice_emoji} !")


@bot.command(name="roll2")
async def roll2(ctx):
    """Lance 2 dés."""
    dice_results = [random.randint(1, 6) for _ in range(2)]  # Lancer 2 dés
    dice_emojis = [DICE_EMOJIS[result] for result in dice_results]  # Convertir en emojis
    results_message = " | ".join(dice_emojis)  # Joindre les résultats avec des séparateurs
    await ctx.send(f"🎲 Résultats des 2 dés : {results_message}")


@bot.command(name="roll3")
async def roll3(ctx):
    """Lance 3 dés."""
    dice_results = [random.randint(1, 6) for _ in range(3)]  # Lancer 3 dés
    dice_emojis = [DICE_EMOJIS[result] for result in dice_results]  # Convertir en emojis
    results_message = " | ".join(dice_emojis)  # Joindre les résultats avec des séparateurs
    await ctx.send(f"🎲 Résultats des 3 dés : {results_message}")


@bot.command(name="roll4")
async def roll4(ctx):
    """Lance 4 dés."""
    dice_results = [random.randint(1, 6) for _ in range(4)]  # Lancer 4 dés
    dice_emojis = [DICE_EMOJIS[result] for result in dice_results]  # Convertir en emojis
    results_message = " | ".join(dice_emojis)  # Joindre les résultats avec des séparateurs
    await ctx.send(f"🎲 Résultats des 4 dés : {results_message}")


@bot.command(name="roll5")
async def roll5(ctx):
    """Lance 5 dés."""
    dice_results = [random.randint(1, 6) for _ in range(5)]  # Lancer 5 dés
    dice_emojis = [DICE_EMOJIS[result] for result in dice_results]  # Convertir en emojis
    results_message = " | ".join(dice_emojis)  # Joindre les résultats avec des séparateurs
    await ctx.send(f"🎲 Résultats des 5 dés : {results_message}")
# Quand le bot est prêt
@bot.event
async def on_ready():
    print(f"Le bot est prêt et connecté en tant que {bot.user}")

# Démarrer le bot
keep_alive()
bot.run(token)

#------------------------------------------------------------------------- Jeux roll (rool1--> roll5)

@bot.command(name="roll")
async def roll(ctx):
    """Lance un dé (1 à 6)"""
    dice_result = random.randint(1, 6)
    dice_emoji = DICE_EMOJIS[dice_result]
    await ctx.send(f"🎲 Tu as obtenu : {dice_emoji} !")

@bot.command(name="roll2")
async def roll2(ctx):
    """Lance 2 dés."""
    dice_results = [random.randint(1, 6) for _ in range(2)]
    dice_emojis = [DICE_EMOJIS[result] for result in dice_results]
    results_message = " | ".join(dice_emojis)
    await ctx.send(f"🎲 Résultats des 2 dés : {results_message}")

@bot.command(name="roll3")
async def roll3(ctx):
    """Lance 3 dés."""
    dice_results = [random.randint(1, 6) for _ in range(3)]
    dice_emojis = [DICE_EMOJIS[result] for result in dice_results]
    results_message = " | ".join(dice_emojis)
    await ctx.send(f"🎲 Résultats des 3 dés : {results_message}")

@bot.command(name="roll4")
async def roll4(ctx):
    """Lance 4 dés."""
    dice_results = [random.randint(1, 6) for _ in range(4)]
    dice_emojis = [DICE_EMOJIS[result] for result in dice_results]
    results_message = " | ".join(dice_emojis)
    await ctx.send(f"🎲 Résultats des 4 dés : {results_message}")

@bot.command(name="roll5")
async def roll5(ctx):
    """Lance 5 dés."""
    dice_results = [random.randint(1, 6) for _ in range(5)]
    dice_emojis = [DICE_EMOJIS[result] for result in dice_results]
    results_message = " | ".join(dice_emojis)
    await ctx.send(f"🎲 Résultats des 5 dés : {results_message}")




